Es una herramienta Open Source dsarrollada por Red Hat y Ansible, escrita en python, powershell y ruby
Herramienta de arquitectura de orquestacion, desde un server maestro podemos ejecutar multiples tareas a los server clientes (Manged nodes)
Desarrollado en Python

###Conceptos Basicos de Ansible
#Control node: Server Maestro
#Managed nodes: Servers clients
#Inventory: Grupo de clientes q definimos en un archivo
#Modules: unidades de codigo q ejecuta ansible, cada modulo tiene un particular uso y puede ser invocado en una tarea o varios modulos en un playbook
#Tasks: Son las unidades de accion en ansible en la q se puede ejecutar una tarea con un comando ad-hoc
#Playbooks: Son archivos yammer o .ini q definen diversas tareas a uno o varios nodos administrados.

###Alternativas de Ansible
#Puppet
#SlatStack
#Chef

###Instalacion Ansible
sudo yum install epel-release = Para instalar Extra Packages for Enterprise Linux repositorio
sudo yum install ansible = Para instalar ansible
ansible --version = para comprobar la version de ansible

###Configurar archivo ansible.cfg
vim /etc/ansible/ansible.cfg = Para entrar al rchivo de configuracion de ansible
[defaults]

#some basic default values

inventory	= /etc/sysadmin/inventory

-------------------------------------

[privilege_escalation]
become=True
become_method=sudo
become_user=root
become_ask_pass=False


#Se deben configurar el usuario y grupo para el nodo-control

sudo groupadd sysadmin
sudo useradd sysadm
sudo usermod -g sysadmin

#se debe configurar visudo para agregar el grupo del nodo control

sudo visudo
-------------------------**************----------------------------------
## Allow root to run any commands anywhere
root    ALL=(ALL)       ALL

## Allows members of the 'sys' group to run networking, software,
## service management apps and more.
# %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS

## Allows people in group wheel to run all commands
%wheel  ALL=(ALL)       ALL
%sysadmin        ALL=(ALL)       NOPASSWD: ALL

## Same thing without a password
# %wheel        ALL=(ALL)       NOPASSWD: ALL
-------------------------***************-----------------------------------

#sudo visudo en los nodos administrados
-------------------------****************-----------------------------------
# User privilege specification
root    ALL=(ALL:ALL) ALL

# Allow members of group sudo to execute any command
%sudo   ALL=(ALL:ALL) ALL
%sysadmin   ALL=(ALL)   NOPASSWD:ALL
-------------------------****************-----------------------------------

###CONFIGURACION DE ARCHIVO INVENTARIO PARA DEFINIR LOS MANAGED NODE

#Crear el archivo inventario
sudo touch inventory

#Otorgar los permisos correctos a nuestro servicio
chmod 644 inventory

#Crear la key
ssh-keygen

#Nos cambiamos al nodo administrado para agregar usuario y grupo
ssh -l sebastian@192.168.56.103

#Creamos grupo y usuario
sudo groupadd sysadmin
sudo useradd sysadm
sudo usermod sysadm -g sysadmin

#Volvemos al nodo administrador y copiamos la llave
ssh-copy-id 192.168.56.103

#Copiamos el id en el mismo nodo controlador
ssh-copy-id 192.168.56.101

#probamos la conexion con 
ssh 192.168.56.103

Definir nuestros primeros grupos de hosts o un simple host
Opciones que tenemos para definir un grupo o host

#Crear archivo inventory
sudo tocuh inventory
chmod 664
chgrp sysadmin inventory

sudo vim /etc/hosts

127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
192.168.56.101  nodo-control
192.168.56.102  nodo-administrado-deb
192.168.56.103  nodo-administrado-ub

Esta configuracion debe estar en /etc/hosts de nodo control y de los nodos administrados.

#configurar archivo inventory
sudo vim inventory
dentro del archivo para definir grupos usamos corchetes []



